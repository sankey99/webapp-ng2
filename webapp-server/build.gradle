buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

configurations { merge }
dependencies {
    merge project(path: ':webapp-client', configuration: 'zip')
}
task merge(dependsOn: configurations.merge, type: Zip) {
    from { configurations.merge.collect { zipTree(it) } }
	destinationDir(buildDir)
}

task copyClientResources(type: Copy) {
    def zipFile = file("${buildDir}/${project.name}.zip")
    def outputDir = file("${buildDir}/resources/main")
 
    from zipTree(zipFile)
    into outputDir
}

processResources.dependsOn(copyClientResources)

copyClientResources.dependsOn(merge)
jar {
    baseName = 'webapp-server'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}